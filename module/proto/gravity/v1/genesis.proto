syntax = "proto3";
package gravity.v1;

import "gogoproto/gogo.proto";
import "gravity/v1/tx.proto";
import "gravity/v1/confirm.proto";
import "gravity/v1/gravity.proto";

option go_package = "github.com/cosmos/gravity-bridge/module/x/gravity/types";

// Params represent the Gravity genesis and store parameters
message Params {
  option (gogoproto.stringer) = false;

  // address of the bridge contract on the EVM chain
  string bridge_contract_address = 1;
  // unique identifier of the EVM chain
  uint64 bridge_chain_id = 2 [(gogoproto.customname) = "BridgeChainID"];
  // target value for when batch transactions time out on Ethereum
  uint64 target_batch_timeout = 3;
  // Average Cosmos block time used to compute batch timeout
  uint64 average_block_time = 4;
  // Average ethereum block time used to compute batch timeout
  uint64 average_ethereum_block_time = 5;
  // amount of blocks of the rolling window required to submit a signature for a signer set confirmation.
  uint64 signer_set_window = 6;
  // amount of blocks of the rolling window required to submit a signature for a batch transaction.
  uint64 batch_tx_window = 7;
  // amount of blocks of the rolling window required to attest an ethereum event.
  uint64 event_window     = 8;
  uint64 unbonding_window = 9;
  // max amount of transactions batched
  uint64 batch_size     = 10;
  // slashing fraction for not signing a signerset confirmation
  string slash_fraction_signer_set = 11
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  // slashing fraction for not signing an outgoing batch transaction to ethereum
  string slash_fraction_batch = 12
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  // slashing fraction for not signing events
  string slash_fraction_event = 13
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  // slashing fraction for submitting a conflicting event from Ethereum
  string slash_fraction_conflicting_event = 14
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  // maximum allowed power difference between the latest and the current ethereum 
  // signer set before submitting a new signer set update request.
  string max_signer_set_power_diff = 15
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
}

// ERC20ToDenom records the relationship between an ERC20 token contract and the
// denomination of the corresponding Cosmos coin.
message ERC20ToDenom {
  // token contract address in hex format
  string erc20_address = 1;
  // coin denomination
  string denom = 2;
}

// GenesisState struct
message GenesisState {
// bridge id is a random 32 byte value to prevent signature reuse (eg: if the
// cosmos validators decided to use the same Ethereum keys for another chain
// also running Gravity, we would not want it to be possible to play a deposit
// from chain A back on chain B's Gravity). This value IS USED on the bridge smart
// contracts.
//
// TODO: is this like the IBC client ID but for the bridge?
  bytes bridge_id = 1 [(gogoproto.customname) = "BridgeID"];
  Params                params              = 2 [(gogoproto.nullable) = false];
  uint64                last_observed_nonce = 3;
  repeated EthSignerSet signer_sets          = 4 [(gogoproto.nullable) = false];
  // requested batch transactions
  repeated BatchTx     batch_txs      = 5 [(gogoproto.nullable) = false];
  repeated LogicCallTx logic_call_txs = 6 [(gogoproto.nullable) = false];
  // unbatched transfer transactions
  repeated TransferTx       transfer_txs        = 7 [(gogoproto.nullable) = false];
  // TODO: use any for confirms

  repeated ConfirmSignerSet signer_set_confirms     = 8 [(gogoproto.nullable) = false];
  repeated ConfirmBatch     batch_confirms      = 9 [(gogoproto.nullable) = false];
  repeated ConfirmLogicCall logic_call_confirms = 10 [(gogoproto.nullable) = false];
  repeated Attestation      attestations        = 11 [(gogoproto.nullable) = false];
  // TODO: proto.Any ethereum eventss

  repeated MsgDelegateKey   delegate_keys       = 12 [(gogoproto.nullable) = false];
  repeated ERC20ToDenom     erc20_to_denoms     = 13 [(gogoproto.nullable) = false];
}
