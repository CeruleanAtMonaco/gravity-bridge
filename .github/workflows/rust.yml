name: Rust

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  rust-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            orchestrator/target/
          key: orchestrator
      - uses: actions/checkout@v2
      - name: Build Orchestrator
        run: cd orchestrator && make build
      - name: Run Orchestrator tests
        run: cd orchestrator && make test
      - name: container-login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: labels
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-orchestrator
      - name: build-and-push
        uses: docker/build-push-action@v2
        with:
          context: ./orchestrator
          file: orchestrator/ci.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}